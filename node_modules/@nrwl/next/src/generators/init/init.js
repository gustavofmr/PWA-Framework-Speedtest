"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nextInitSchematic = exports.nextInitGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const set_default_collection_1 = require("@nrwl/workspace/src/utilities/set-default-collection");
const run_tasks_in_serial_1 = require("@nrwl/workspace/src/utilities/run-tasks-in-serial");
const jest_1 = require("@nrwl/jest");
const cypress_1 = require("@nrwl/cypress");
const react_1 = require("@nrwl/react");
const versions_1 = require("../../utils/versions");
function updateDependencies(host) {
    devkit_1.updateJson(host, 'package.json', (json) => {
        if (json.dependencies && json.dependencies['@nrwl/gatsby']) {
            delete json.dependencies['@nrwl/gatsby'];
        }
        return json;
    });
    return devkit_1.addDependenciesToPackageJson(host, {
        next: versions_1.nextVersion,
        react: react_1.reactVersion,
        'react-dom': react_1.reactDomVersion,
        tslib: '^2.0.0',
    }, {
        '@nrwl/next': versions_1.nxVersion,
    });
}
function nextInitGenerator(host, schema) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const tasks = [];
        set_default_collection_1.setDefaultCollection(host, '@nrwl/next');
        if (!schema.unitTestRunner || schema.unitTestRunner === 'jest') {
            const jestTask = jest_1.jestInitGenerator(host, {});
            tasks.push(jestTask);
        }
        if (!schema.e2eTestRunner || schema.e2eTestRunner === 'cypress') {
            const cypressTask = cypress_1.cypressInitGenerator(host);
            tasks.push(cypressTask);
        }
        const reactTask = yield react_1.reactInitGenerator(host, schema);
        tasks.push(reactTask);
        const installTask = updateDependencies(host);
        tasks.push(installTask);
        return run_tasks_in_serial_1.runTasksInSerial(...tasks);
    });
}
exports.nextInitGenerator = nextInitGenerator;
exports.default = nextInitGenerator;
exports.nextInitSchematic = devkit_1.convertNxGenerator(nextInitGenerator);
//# sourceMappingURL=init.js.map