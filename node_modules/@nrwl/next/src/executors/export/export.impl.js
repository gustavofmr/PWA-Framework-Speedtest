"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const export_1 = require("next/dist/export");
const constants_1 = require("next/dist/next-server/lib/constants");
const path_1 = require("path");
const config_1 = require("../../utils/config");
try {
    require('dotenv').config();
}
catch (e) { }
function exportExecutor(options, context) {
    var e_1, _a;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const buildTarget = devkit_1.parseTargetString(options.buildTarget);
        const build = yield devkit_1.runExecutor(buildTarget, {}, context);
        try {
            for (var build_1 = tslib_1.__asyncValues(build), build_1_1; build_1_1 = yield build_1.next(), !build_1_1.done;) {
                const result = build_1_1.value;
                if (!result.success) {
                    return result;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (build_1_1 && !build_1_1.done && (_a = build_1.return)) yield _a.call(build_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        const buildOptions = devkit_1.readTargetOptions(buildTarget, context);
        const root = path_1.resolve(context.root, buildOptions.root);
        const config = yield config_1.prepareConfig(constants_1.PHASE_EXPORT, buildOptions, context);
        yield export_1.default(root, {
            statusMessage: 'Exporting',
            silent: options.silent,
            threads: options.threads,
            outdir: `${buildOptions.outputPath}/exported`,
        }, config);
        return { success: true };
    });
}
exports.default = exportExecutor;
//# sourceMappingURL=export.impl.js.map