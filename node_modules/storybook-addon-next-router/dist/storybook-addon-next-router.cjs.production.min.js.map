{"version":3,"file":"storybook-addon-next-router.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import { action } from '@storybook/addon-actions';\nimport { makeDecorator } from '@storybook/addons';\nimport React from 'react';\nimport Router, { NextRouter } from 'next/router';\nimport { RouterContext } from 'next/dist/next-server/lib/router-context';\n\nexport const withNextRouter = makeDecorator({\n  name: 'NextRouter',\n  parameterName: 'nextRouter',\n  wrapper(getStory, context, settings) {\n    Router.router = {\n      route: '/',\n      pathname: '/',\n      query: {},\n      asPath: '/',\n      push(...args) {\n        action('nextRouter.push')(...args);\n        return Promise.resolve(true);\n      },\n      replace(...args) {\n        action('nextRouter.replace')(...args);\n        return Promise.resolve(true);\n      },\n      reload(...args) {\n        action('nextRouter.reload')(...args);\n      },\n      back(...args) {\n        action('nextRouter.back')(...args);\n      },\n      prefetch(...args) {\n        action('nextRouter.prefetch')(...args);\n        return Promise.resolve();\n      },\n      beforePopState(...args) {\n        action('nextRouter.beforePopState')(...args);\n      },\n      events: {\n        on(...args) {\n          action('nextRouter.events.on')(...args);\n        },\n        off(...args) {\n          action('nextRouter.events.off')(...args);\n        },\n        emit(...args) {\n          action('nextRouter.events.emit')(...args);\n        },\n      },\n      isFallback: false,\n      ...settings.options,\n      ...settings.parameters,\n    } as typeof Router.router;\n\n    return (\n      <RouterContext.Provider value={Router.router as NextRouter}>\n        {getStory(context)}\n      </RouterContext.Provider>\n    );\n  },\n});\n"],"names":["makeDecorator","name","parameterName","wrapper","getStory","context","settings","Router","router","route","pathname","query","asPath","push","action","Promise","resolve","replace","reload","back","prefetch","beforePopState","events","on","off","emit","isFallback","options","parameters","React","RouterContext","Provider","value"],"mappings":"iiBAM8BA,gBAAc,CAC1CC,KAAM,aACNC,cAAe,aACfC,iBAAQC,EAAUC,EAASC,UACzBC,EAAOC,UACLC,MAAO,IACPC,SAAU,IACVC,MAAO,GACPC,OAAQ,IACRC,uBACEC,SAAO,2CACAC,QAAQC,SAAQ,IAEzBC,0BACEH,SAAO,8CACAC,QAAQC,SAAQ,IAEzBE,kBACEJ,SAAO,8CAETK,gBACEL,SAAO,4CAETM,2BACEN,SAAO,+CACAC,QAAQC,WAEjBK,0BACEP,SAAO,sDAETQ,OAAQ,CACNC,cACET,SAAO,iDAETU,eACEV,SAAO,kDAETW,gBACEX,SAAO,oDAGXY,YAAY,GACTpB,EAASqB,QACTrB,EAASsB,YAIZC,gBAACC,gBAAcC,UAASC,MAAOzB,EAAOC,QACnCJ,EAASC"}